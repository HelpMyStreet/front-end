@using HelpMyStreetFE.Models.Account
@using HelpMyStreetFE.Enums.Account
@using HelpMyStreetFE.Models.Account.Jobs;
@using HelpMyStreet.Utils.Enums;

@model AccountViewModel

@{
    bool NoCriteriaJobsToDisplay = false;
    bool NoNonCriteriaJobsToDisplay = false;
}

<div class="verification-panel">
    <div class="user-profile profile-panel p-md">
        <header class="profile-panel__header">
            <h3 class="profile-panel__title">Open Requests</h3>
            <p>Help that’s needed near you</p>
        </header>

        <div class="profile">

            @if (NoCriteriaJobsToDisplay && NoNonCriteriaJobsToDisplay)
            {
                <div class="profile__empty">
                    <p class="profile__empty__title">Everyone's taken care of!</p>
                    <p class="profile__empty__text">
                        Please come back later to check for new Open Requests for help and support - they’re being added all the time.
                        We’ll also send you email notifications of new requests.
                    </p>
                    <p class="profile__empty__title">Thank You!</p>
                </div>
            }
            else
            {
                <p>Requests meeting the criteria you set when you signed up</p>
                @await Component.InvokeAsync("JobList", new
                   {
                       JobSet = JobSet.UserOpenRequests_MatchingCriteria,
                       EmptyListCallback = new Action(() => NoCriteriaJobsToDisplay = true),
                   })
                @if (NoCriteriaJobsToDisplay)
                {
                    <div class="profile__empty">
                        <p class="profile__empty__text--left">
                            There are no open requests at present which meet the criteria you specified when you signed up
                        </p>
                    </div>
                }


                <p>Other Requests</p>


                <div class="job-filter-panel">
                    @await Component.InvokeAsync("JobFilterPanel", new JobFilterViewModel()
               {
                   SupportActivities = new List<FilterField<SupportActivities>>()
                   {
                       new FilterField<SupportActivities>(){Value = SupportActivities.CheckingIn },
                       new FilterField<SupportActivities>(){Value = SupportActivities.WellbeingPackage},
                       new FilterField<SupportActivities>(){Value = SupportActivities.Shopping},
                       new FilterField<SupportActivities>(){Value = SupportActivities.MealPreparation},
                       new FilterField<SupportActivities>(){Value = SupportActivities.Errands},
                       new FilterField<SupportActivities>(){Value = SupportActivities.DogWalking},
                       new FilterField<SupportActivities>(){Value = SupportActivities.HomeworkSupport},
                       new FilterField<SupportActivities>(){Value = SupportActivities.Other},
                       new FilterField<SupportActivities>(){Value = SupportActivities.PhoneCalls_Friendly},
                       new FilterField<SupportActivities>(){Value = SupportActivities.MedicalAppointmentTransport},
                   },
                   DueInNextXDays = new List<FilterField<int>>()
                   {
                       new FilterField<int>{Value = 1, Label = "Today" },
                       new FilterField<int>{Value = 7, Label = "This week"},
                       new FilterField<int>{Value = 14, Label = "Next 2 weeks"},
                       new FilterField<int>{Value = 999, Label = "Show all"}
                   },
                   MaxDistanceInMiles = new List<FilterField<int>>()
                   {
                       new FilterField<int>{Value = 0, Label = "My street only"},
                       new FilterField<int>{Value = 1, Label ="Within 1 mile"},
                       new FilterField<int>{Value = 5, Label = "within 5 miles"},
                       new FilterField<int>{Value = 10, Label = "within 10 miles"},
                       new FilterField<int>{Value = 20, Label = "within 20 miles"},
                       new FilterField<int>{Value = 50, Label = "within 50 miles"},
                       new FilterField<int>{Value = Int32.MaxValue, Label = "Show all"},
                   }
               })
                </div>

                <div class="profile__section job-filter-results-panel">
                    @await Component.InvokeAsync("JobList", new
                       {
                           JobSet = JobSet.UserOpenRequests_NotMatchingCriteria,
                           EmptyListCallback = new Action(() => NoNonCriteriaJobsToDisplay = true),
                       })
                </div>
                @if (NoNonCriteriaJobsToDisplay)
                {
                    <div class="profile__empty">
                        <p class="profile__empty__text--left">
                            There are no further open requests nearby at present
                        </p>
                    </div>
                }
            }
        </div>
    </div>

    @if (Model.UserDetails.IsVerified)
    {
        <div class="user-profile profile-panel p-md mt-md">
            <header class="profile-panel__header">
                <h3 class="profile-panel__title">Submit &amp; Accept</h3>
            </header>

            <div class="profile">
                <div>
                    <p>
                        If you have a request for help that you are going to complete yourself, you can use the Submit &amp; Accept function to immediately accept the request when you submit it.
                    </p>
                </div>

                <p>The request will immediately appear in your 'Accepted Requests' page and others volunteers won't be able to see or accept them.<p>
                    <div class="profile__empty mt-md">
                        <a href="/request-help/0/DIY" class="btn cta cta--orange fill">Submit &amp; Accept</a>
                    </div>
            </div>
        </div>
    }
</div>
