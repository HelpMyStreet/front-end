@model HelpMyStreetFE.Models.Account.AccountViewModel;
@using HelpMyStreetFE.Enums.Account

@section Scripts {
    <script src="~/profile.js" asp-append-version="true"></script>
    <script>
        const initObj = {
            domId: '@Model.VerificationViewModel.YotiOptions.DomId',
            scenarioId: '@Model.VerificationViewModel.YotiOptions.ScenarioId',
            clientSdkId: '@Model.VerificationViewModel.YotiOptions.ClientSdkId',
            userId: '@Model.VerificationViewModel.EncodedUserID',
            isVerified: '@Model.VerificationViewModel.IsVerified'
        };

    </script>
    <script src="~/calendar.js" asp-append-version="true"></script>
    <script>const events = [
            {
                title: 'All Day Event',
                start: '2018-01-01',
            },
            {
                title: 'Long Event',
                start: '2018-01-07',
                end: '2018-01-10'
            },
            {
                groupId: 999,
                title: 'Repeating Event',
                start: '2018-01-09T16:00:00'
            },
            {
                groupId: 999,
                title: 'Repeating Event',
                start: '2018-01-16T16:00:00'
            },
            {
                title: 'Conference',
                start: '2018-01-11',
                end: '2018-01-13'
            },
            {
                title: 'Meeting',
                start: '2018-01-12T10:30:00',
                end: '2018-01-12T12:30:00'
            },
            {
                title: 'Lunch',
                start: '2018-01-12T12:00:00'
            },
            {
                title: 'Meeting',
                start: '2018-01-12T14:30:00'
            },
            {
                title: 'Happy Hour',
                start: '2018-01-12T17:30:00'
            },
            {
                title: 'Dinner',
                start: '2018-01-12T20:00:00'
            },
            {
                title: 'Birthday Party',
                start: '2018-01-13T07:00:00'
            },
            {
                title: 'Click for Google',
                url: 'http://google.com/',
                start: '2018-01-28'
            }
        ]</script>
}

@{
    ViewBag.Title = Model.CurrentPage switch
    {
        MenuPage.AcceptedRequests => "My Accepted Requests",
        MenuPage.CompletedRequests => "My Completed Requests",
        MenuPage.OpenRequests => "Open Requests",
        MenuPage.GroupRequests => $"{Model.CurrentGroup.GroupName} Requests",
        MenuPage.GroupVolunteers => $"{Model.CurrentGroup.GroupName} Volunteers",
        _ => "My Profile"
    };
}

<main class="account__wrapper container">
    <div class="mb-md mt-md row">
        <div class="awards-component">@await Component.InvokeAsync("Awards", new { userID = Model.UserDetails.User.ID, cancellationToken = System.Threading.CancellationToken.None })</div>
    </div>

    <div class="account__body">
        <partial name="_AccountNavigation" />

        @switch (Model.CurrentPage)
        {
            case MenuPage.OpenRequests:
                <partial name="_OpenRequests" for="@Model" />
                break;
            case MenuPage.AcceptedRequests:
                <partial name="_AcceptedRequests" for="@Model" />
                break;
            case MenuPage.CompletedRequests:
                <partial name="_CompletedRequests" for="@Model" />
                break;
            case MenuPage.GroupRequests:
                <partial name="_GroupRequests" for="@Model" />
                break;
            case MenuPage.GroupVolunteers:
                <partial name="_GroupVolunteers" for="@Model" />
                break;
            case MenuPage.Calendar:
                <partial name="_Calendar" />
                break;
            default:
                <partial name="_Verification" for="VerificationViewModel" />
                @if (Model.VerificationViewModel.StartAtStep == 0)
                {
                    <partial name="_UserData" for="@Model.PageModel" />
                }
                break;
        }

    </div>
</main>
