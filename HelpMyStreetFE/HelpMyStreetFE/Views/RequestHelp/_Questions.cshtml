@model HelpMyStreetFE.Models.RequestHelp.Stages.Request.TasksViewModel
@using HelpMyStreet.Utils.Enums;

<input type="hidden" name="currentStep.SelectedTask.QuestionCount" value="@Model.Questions?.Count" />

@for (int i = 0; i < Model.Questions?.Count; i++)
{
    if (!Model.Questions[i].Show) continue;
    var name = $"currentStep.SelectedTask.Questions.[{i}].Model";
    var id = $"currentStep.SelectedTask.Questions.[{i}].Id";
    <input type="hidden" name="@id" value="@Model.Questions[i].ID" />


    <div class="row">
        <div class="sm12 input">
            <label>
                @Model.Questions[i].Label
                <span class="sub-text">@Model.Questions[i].Subtext()</span>
            </label>

            @switch (Model.Questions[i].InputType)
            {
                case QuestionType.MultiLineText:
                    <textarea placeholder="@Model.Questions[i].Placeholder()" data-id="@Model.Questions[i].ID" class="question @Model.Questions[i].Class()" data-required="@Model.Questions[i].Required" data-val-message="@Model.Questions[i].DataValidationMessage" name="@name">@Model.Questions[i].Model</textarea>
                    break;
                case QuestionType.Text:
                    <input type="text" placeholder="@Model.Questions[i].Placeholder()" data-id="@Model.Questions[i].ID" class="question @Model.Questions[i].Class()" data-required="@Model.Questions[i].Required" data-val-message="@Model.Questions[i].DataValidationMessage" value="@Model.Questions[i].Model" name="@name">
                    break;
                case QuestionType.Number:
                    <input type="number" min="1" placeholder="@Model.Questions[i].Placeholder()" data-id="@Model.Questions[i].ID" class="question @Model.Questions[i].Class()" data-required="@Model.Questions[i].Required" data-val-message="@Model.Questions[i].DataValidationMessage" value="@Model.Questions[i].Model" name="@name">
                    break;
                case QuestionType.Radio:

                    @foreach (var radio in Model.Questions[i].AdditionalData)
                    {
                        <div class="input--radio">
                            <label>
                                <input type="radio" name="@name" value="@radio.Key" data-id="@Model.Questions[i].ID" data-required="@Model.Questions[i].Required" data-val-message="@Model.Questions[i].DataValidationMessage" class="question @Model.Questions[i].Class()" @(Model.Questions[i].Model == radio.Key ? "checked" : "") hidden />
                                <span class="input--radio__radio">
                                    <span class="input--radio__radio__inner"></span>
                                </span>
                                @radio.Value

                            </label>
                        </div>
                    }
                    break;
            }

            <span class="error"></span>



        </div>
    </div>
    <hr class="input--separator" />
}
