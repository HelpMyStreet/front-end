@model HelpMyStreetFE.Models.RequestHelp.Stages.Review.RequestHelpReviewStageViewModel;
@using HelpMyStreetFE.Models.RequestHelp.Enum;

@{
    var onBehalf = Model.RequestedFor.Type == RequestorType.OnBehalf;
}
    <input type="hidden" name="ReviewStep" value='@Json.Serialize(Model)' />

<h2>Review</h2>
<div class="tiles">
    <div class="row justify-center  ">
        <div class="sm8">
            <label class="tiles__label--large"> Request For</label>
            <a class="to-request">Edit</a>
        </div>
    </div>
    <div class="row  justify-center pb-md">
        <div class="sm4">
            @Html.DisplayFor(x => x.Task, "TaskTile")
        </div>
        <div class="sm4">
            @Html.DisplayFor(x => x.RequestedFor, "RequestForTile")
        </div>
    </div>
    <hr class="input--separator" />
    <div class="row mt-md justify-center">
        <div class="sm8">
            <label class="tiles__label--large"> Description</label> <a class="to-request">Edit</a>
        </div>
    </div>
    <div class="row justify-center ">
        <div class="sm8">
            <div class="tiles__tile tiles__tile--large">
                <div class="tiles__tile__content--top ">

                    <div class="row">
                        <div class="sm6">
                            <div class="tiles__tile__content--top__header pt-xs left">Additional Information</div>
                            <div class="tiles__tile__content__description left">

                                @if (Model.Task.Questions != null) {
                                    @foreach (var question in Model.Task.Questions)
                                    {
                                    <div>
                                        <strong>@question.Label: </strong> @question.Model
                                    </div>
                                    }
                                }
                            </div>
                        </div>
                        <div class="sm6">
                            <div class="tiles__tile__content--top__header pt-xs left">Is this request critical to someone’s health or wellbeing?</div>
                            <div class="tiles__tile__content--top__description left">
                                @Model.HealthCriticalReviewString
                            </div>
                            <div class="tiles__tile__content--top__header pt-xs mt-md left">When is the help needed?</div>
                            <div class="tiles__tile__content--top__description left">
                                @Model.TimeRequestedReviewString
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr class="input--separator" />
    <div class="row mt-md justify-center">
        <div class="sm8">
            <label class="tiles__label--large"> Personal Details</label> <a class="to-details">Edit</a>
        </div>
    </div>
    <div class="row justify-center ">
        <div class="@(onBehalf? "sm4" : "sm8")">
            <div class="tiles__tile tiles__tile--large min-height">
                <div class="tiles__tile__content--top ">
                    <div class="tiles__tile__content--top__header  pt-xs left">Your Details</div>
                    <div class="tiles__tile__content__description tiles__tile__content--top__description">
                        <div><strong>Name: </strong> @(onBehalf ? Model.Requestor.Firstname : Model.Recipient.Firstname)  </div>
                        <div><strong>Address: @(onBehalf ? Model.Requestor.Postcode : $"{Model.Recipient.AddressLine1}, {Model.Recipient.Town},{Model.Recipient.Postcode}")  </strong></div>
                        <div><strong>Email: @(onBehalf ? Model.Requestor.Email : Model.Recipient.Email) </strong></div>
                        <div><strong>Mobile Number: @(onBehalf ? Model.Requestor.MobileNumber : Model.Recipient.MobileNumber) </strong></div>
                        <div><strong>Alternate Number: @(onBehalf ? Model.Requestor.AlternatePhoneNumber : Model.Recipient.AlternatePhoneNumber) </strong></div>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.RequestedFor.Type ==  RequestorType.OnBehalf)
        {
            <div class="sm4">
                <div class="tiles__tile tiles__tile--large min-height">
                    <div class="tiles__tile__content--top">
                        <div class=" tiles__tile__content--top__header  pt-xs left">Their Details</div>
                        <div class="tiles__tile__content__description tiles__tile__content--top__description">
                            <div><strong>Name: </strong> @Model.Recipient.Firstname</div>
                            <div><strong>Address: </strong> @($"{Model.Recipient.AddressLine1}, {Model.Recipient.Town},{Model.Recipient.Postcode}")  </div>
                            <div><strong>Email: </strong> @Model.Recipient.Email </div>
                            <div><strong>Mobile Number: </strong>  @Model.Recipient.MobileNumber</div>
                            <div><strong>Alternate Number: @Model.Recipient.AlternatePhoneNumber </strong></div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>



