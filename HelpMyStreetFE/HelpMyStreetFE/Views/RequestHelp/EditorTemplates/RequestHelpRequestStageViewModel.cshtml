@model HelpMyStreetFE.Models.RequestHelp.Stages.Request.RequestHelpRequestStageViewModel
@using HelpMyStreet.Utils.Enums;
@using Westwind.AspNetCore.Markdown;

<input type="hidden" name="RequestStep" class="model" value='@Json.Serialize(Model)' />
@Html.Hidden("FormStage", RequestHelpFormStage.Request)
@Html.HiddenFor(m => m.RequestGuid)
<input type="hidden" name="selectAction" />

<div class="@Model.PageHeadingClass">
    <h2>@Model.PageHeading</h2>
    <div class="row">
        <div class="sm12">
            @Markdown.ParseHtmlString(Model.IntoText)
        </div>
    </div>
</div>

<div class="row activity-selector-container">
    <div class="sm12 input">
        <partial name="_TileSelector" model='new TileSelectorViewModel { Label = "What do you need help with?", TileVMs = Model.Tasks, FieldName = "currentStep.SelectedTask", TileView = "TaskTile" }' />
    </div>
</div>

<div class="row">
    <div class="sm12">
        <div class="questions" data-position="pos1">
            <partial name="_Questions" model="@Model.Questions.GetQuestionsByLocation("pos1")" />
        </div>
    </div>
</div>

<hr class="input--separator mt-lg" />

<h2>Help description</h2>

<div class="row">
    <div class="sm12">
        <div class="questions" data-position="pos2">
            <partial name="_Questions" model="@Model.Questions.GetQuestionsByLocation("pos2")" />
        </div>
    </div>
</div>

@if (Model.Requestors.Count() == 1)
{
    <input type="hidden" id="selectedRequestor" name="currentStep.SelectedRequestor" value="@Model.Requestors.First().Value" />
}
else
{
    <div class="row">
        <partial name="_TileSelector" model='new TileSelectorViewModel { Label = "Who is the help for?", TileVMs = Model.Requestors, FieldName = "currentStep.SelectedRequestor", TileView = "RequestForTile" }' />
    </div>

    <hr class="input--separator" />
}

<div class="row">
    <partial name="_TileSelector" model='new TileSelectorViewModel { Label = "How often is the help needed?", TileVMs = Model.Frequencies, FieldName = "currentStep.SelectedFrequency" }' />
</div>


<div class="row">
    @{ 
        var timeSelectorViewModel = new TileSelectorViewModel
        {
            Label = "When is the help <span hide-tile-when='repeats:false'>first</span> needed?",
            TileVMs = Model.Timeframes,
            FieldName = "currentStep.SelectedTimeFrame.Id",
            TileView = "TimeFrameTile"
        };
    }
    <partial name="_TileSelector" model='@timeSelectorViewModel' />
</div>

<div class="row occurrences-question" show-tile-when="repeats:true">
    <div class="sm12 input">
        <label>
            How many times is the help needed?
            <span class="sub-text">Please tell us for how long the help is needed (up to a maximum of <span class="occurrences-max"></span>)</span>
        </label>
        <label>
            <input type="number" min="2" class="small-width inline mr-sm" value="@Model.Occurrences" name="currentStep.Occurrences">
            times
        </label>
        <span class="error"></span>
    </div>
</div>


<hr class="input--separator" />

<div class="row">
    <div class="sm12">
        <div class="questions" data-position="pos3">
            <partial name="_Questions" model="@Model.Questions.GetQuestionsByLocation("pos3")" />
        </div>
    </div>
</div>





<div class="row">
    <div class="sm10">
        <div class="input input--checkbox">
            <label for="currentStep_AgreeToPrivacyAndTerms" class="small">
                @Html.CheckBoxFor(x => x.AgreeToPrivacyAndTerms, new { hidden = true })
                <span class="input--checkbox__checkbox">
                    <span class="mdi mdi-check"></span>
                </span>
                By checking this box you agree to our <a href="/terms-conditions">Terms</a> and that you have read our <a href="/privacy-policy">Privacy Policy</a>. If you are submitting a request for help on behalf of someone else, you are also confirming that you have the help recipient’s consent to share their details and are happy for your information to be shared in relation to this request.
                <div class="error"></div>
            </label>
        </div>
    </div>
</div>
