@model HelpMyStreetFE.Models.Account.AccountViewModel;
@using HelpMyStreetFE.Enums.Account;
@using HelpMyStreet.Utils.Enums;

<nav class="account__nav">
    <ul class="account__nav__list m-0 p-0">
        <li class="account__nav__item">
            <a href="/account/open-requests" class="@(Model.CurrentPage == MenuPage.OpenRequests ? "selected" : string.Empty)">
                Open Requests
                <span class="account__nav__badge" data-menu-page="@MenuPage.OpenRequests"></span>
            </a>
        </li>

        <li class="account__nav__item">
            <a href="/account/accepted-requests" class="@(Model.CurrentPage == MenuPage.AcceptedRequests ? "selected" : string.Empty)">
                My Accepted Requests
                <span class="account__nav__badge" data-menu-page="@MenuPage.AcceptedRequests"></span>
            </a>
        </li>

        <li class="account__nav__item">
            <a href="/account/completed-requests" class="@(Model.CurrentPage == MenuPage.CompletedRequests ? "selected" : string.Empty)">
                My Completed Requests
                <span class="account__nav__badge" data-menu-page="@MenuPage.CompletedRequests"></span>
            </a>
        </li>

        @if (Model.UserDetails.IsStreetChampion && Model.UserDetails.IsVerified)
        {
            <li class="account__nav__item">
                <a href="/account/streets" class="@(Model.CurrentPage == MenuPage.MyStreets ? "selected" : string.Empty)">My Streets</a>
            </li>
        }
        <li class="account__nav__item">
            <a href="/account/profile" class="@(Model.CurrentPage == MenuPage.UserDetails ? "selected" : string.Empty)">My Profile</a>
        </li>
        @foreach (var userGroup in Model.UserGroups)
        {
            @if (userGroup.UserRoles.Contains(GroupRoles.TaskAdmin) || userGroup.UserRoles.Contains(GroupRoles.UserAdmin))
            {
                <li class="account__nav__item submenu__container">
                    <a href=@($"/account/g/{userGroup.GroupKey}") class="@(Model.CurrentGroup?.GroupKey == userGroup.GroupKey ? "selected" : string.Empty)">
                        @userGroup.GroupName
                        <span class="account__nav__badge" data-group-key="@userGroup.GroupKey" data-menu-page="@MenuPage.GroupRequests"></span>
                    </a>
                    <ul>
                        @if (userGroup.UserRoles.Contains(GroupRoles.TaskAdmin))
                        {
                            <li class="account__nav__item">
                                <a href=@($"/account/g/{userGroup.GroupKey}/requests") class="@(Model.CurrentGroup?.GroupKey == userGroup.GroupKey && Model.CurrentPage == MenuPage.GroupRequests ? "selected" : string.Empty)">
                                    Requests
                                    <span class="account__nav__badge" data-group-key="@userGroup.GroupKey" data-menu-page="@MenuPage.GroupRequests"></span>
                                </a>
                            </li>
                        }
                        @if (userGroup.UserRoles.Contains(GroupRoles.UserAdmin))
                        {
                            <li class="account__nav__item">
                                <a href=@($"/account/g/{userGroup.GroupKey}/volunteers") class="@(Model.CurrentGroup?.GroupKey == userGroup.GroupKey && Model.CurrentPage == MenuPage.GroupVolunteers ? "selected" : string.Empty)">Volunteers</a>
                            </li>
                        }
                    </ul>
                </li>
            }
        }

    </ul>
</nav>
