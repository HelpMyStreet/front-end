@using HelpMyStreet.Utils.Utils;
@using HelpMyStreet.Utils.Extensions;

@model HelpMyStreetFE.Models.Account.Volunteers.VolunteerListViewModel

@{
    int i = 0;
}

<script>
    document.documentElement.style.setProperty("--numberOfCredentials", @Model.GroupCredentials.Count());
</script>

<div class="volunteer-list generic-expander pt-sm">

    <div class="location header">Location</div>
    <div class="completed-requests header">Completed Requests</div>
    @foreach (var credential in Model.GroupCredentials.OrderBy(c => c.DisplayOrder))
    {
        <div class="pad-xs credential header">
            @credential.Name

            @if (!string.IsNullOrEmpty(credential.WhatIsThis))
            {
                <a class="what-is-this" href="#"
                   data-credential="@Base64Utils.Base64Encode(credential.CredentialID)"
                   data-target-group="@Base64Utils.Base64Encode(credential.GroupID)">
                    What is this?
                </a>
            }
        </div>
    }

    @foreach (var volunteer in Model.Volunteers.OrderBy(v => v.User.UserPersonalDetails.FullName()))
    {
        i++;
        <div class="name-wrapper">
            <span class="name">
                @volunteer.User.UserPersonalDetails.FullName()
            </span>
            <span class="roles">
                @volunteer.RolesSummary
            </span>
            <div class="generic-expander__controls large-screen-only" data-expander-target="volunteer-details-@i">
                <a href="#" class="open">View volunteer details</a>
                <a href="#" class="close">Hide volunteer details</a>
            </div>
        </div>
        <div class="location">
            <span class="small-screen-only">Location: </span>
            @volunteer.User.UserPersonalDetails.LocationSummary()
        </div>
        <div class="completed-requests">
            <span class="small-screen-only">Completed Requests: </span>
            @volunteer.CompletedRequests
        </div>
        @foreach (var credential in volunteer.Credentials.OrderBy(c => c.GroupCredential.DisplayOrder))
        {
            <div class="pad-xs credential">
                @if (credential.UserHasCredential)
                {
                    <img src="~/img/icons/green-tick.svg" alt="tick" title="@credential.GroupCredential.Name: Yes" />
                }
                else
                {
                    if (credential.GroupCredential.CredentialVerifiedBy == HelpMyStreet.Utils.Enums.CredentialVerifiedBy.GroupAdmin)
                    {
                        <a href="#" title="Add @credential.GroupCredential.Name" class="add-credential"
                           data-target-user="@Base64Utils.Base64Encode(volunteer.User.ID)"
                           data-credential="@Base64Utils.Base64Encode(credential.GroupCredential.CredentialID)"
                           data-target-group="@Base64Utils.Base64Encode(credential.GroupCredential.GroupID)">
                            <span class="cross"><span>X</span></span>
                            <span class="add">Add</span>
                        </a>
                    }
                    else
                    {
                        <span class="cross" title="@credential.GroupCredential.Name: No"><span>X</span></span>
                    }
                }
                <span class="small-screen-only">
                    @credential.GroupCredential.Name
                    @if (!string.IsNullOrEmpty(credential.GroupCredential.WhatIsThis))
                    {
                        <a class="what-is-this" href="#"
                           data-credential="@Base64Utils.Base64Encode(credential.GroupCredential.CredentialID)"
                           data-target-group="@Base64Utils.Base64Encode(credential.GroupCredential.GroupID)">
                            (What is this?)
                        </a>
                    }
                </span>
            </div>
        }
        <div class="generic-expander__controls small-screen-only mt-sm" data-expander-target="volunteer-details-@i">
            <a href="#" class="open">View volunteer details</a>
            <a href="#" class="close">Hide volunteer details</a>
        </div>

        <div class="volunteer-list__volunteer-detail">
            <div id="volunteer-details-@i" class="generic-expander__content">
                <div class="row">
                    <dl class="sm6">
                        <dt>Address</dt>
                        <dd>@Html.DisplayFor(x => volunteer.User.UserPersonalDetails.Address)</dd>
                        <dt>Email Address</dt>
                        <dd><a href="mailto:@volunteer.User.UserPersonalDetails.EmailAddress">@volunteer.User.UserPersonalDetails.EmailAddress</a></dd>
                        <dt>@(volunteer.User.UserPersonalDetails.PhoneNumbers().Count() > 1 ? "Phone numbers" : "Phone number")</dt>
                        <dd>@string.Join(" / ", volunteer.User.UserPersonalDetails.PhoneNumbers())</dd>
                    </dl>
                    <dl class="sm6">
                        <dt>Volunteering Radius</dt>
                        <dd>@volunteer.User.SupportRadiusMiles miles</dd>
                        <dt>Selected Activities</dt>
                        <dd>@string.Join(", ", volunteer.User.SupportActivities.Select(a => a.FriendlyNameShort()))</dd>
                    </dl>
                </div>
            </div>
        </div>
    }
</div>
