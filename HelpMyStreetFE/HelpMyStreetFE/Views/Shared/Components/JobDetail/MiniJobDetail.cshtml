@using HelpMyStreetFE.Helpers;
@using HelpMyStreet.Utils.Enums;
@using HelpMyStreet.Utils.Extensions;
@using HelpMyStreet.Utils.Utils;
@using HelpMyStreetFE.Models.Account.Jobs;
@using Westwind.AspNetCore.Markdown

@model JobDetailViewModel

@{

    var jobDetails = Model.JobDetail.Item;

    var userActingAsAdmin = Model.JobDetail.UserRole.Equals(RequestRoles.GroupAdmin);
    var userAllocatedToTask = jobDetails.VolunteerUserID.Equals(Model.JobDetail.User.ID);

    var questionsToDisplay = jobDetails.Questions.Where(q => q.ShowOnTaskManagement(userActingAsAdmin, userAllocatedToTask) && !string.IsNullOrEmpty(q.Answer));
    var encodedJobID = Base64Utils.Base64Encode(jobDetails.JobID);
    var encodedRequestID = Base64Utils.Base64Encode(jobDetails.RequestID);
    var encodedRole = Base64Utils.Base64Encode((int)Model.JobDetail.UserRole);

}

<div class="job__expander job mini-job-detail" id="@encodedJobID" request-id="@encodedRequestID" data-role="@encodedRole" data-user-allocated-to-job="@userAllocatedToTask">
    <h4>
        <img class="status-icon toggle-on-status-change" src="~/img/icons/status/@jobDetails.JobStatus.Icon()" alt="@jobDetails.JobStatus.FriendlyName()" title="@jobDetails.JobStatus.FriendlyName()" />
        <span title="@jobDetails.DueDate.FriendlyFutureDate()">
            @jobDetails.DueDate.FormatDate(DateTimeFormat.ShortDateFormat) &ndash;
        </span>
        <span class="toggle-on-status-change">
            @jobDetails.JobStatus.SlotJobStatusWithYouOrAnother(userAllocatedToTask)
        </span>
        <span class="job__status__new dnone toggle-on-status-change"></span>
        <span class="job__info__actions">
            <partial name="_JobButtons_Volunteer" model="Model.JobDetail" />
        </span>
        <span></span>
    </h4>
    <div class="job__expander__content request-job__content">
        <div class="row">
            <div class="sm12">
                <dl class="">
                    <partial name="_WhenIsHelpNeeded" model="@Model.JobDetail.Item" />
                </dl>
            </div>
        </div>
        @if ((userActingAsAdmin || userAllocatedToTask) && questionsToDisplay.Count() > 0)
        {
            <div class="row">
                <div class="sm12 add-line-before">
                    <h5>Request Details</h5>
                    @foreach (var q in questionsToDisplay.OrderBy(q => q.TaskManagementDisplayOrder()))
                    {
                        <dl>
                            <dt>@q.FriendlyName()</dt>
                            <dd>@Html.Raw(q.Answer.ToHtmlSafeStringWithLineBreaks())</dd>
                        </dl>
                    }
                </div>
            </div>
        }
    </div>
</div>

