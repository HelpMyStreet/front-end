@using HelpMyStreetFE.Helpers;
@using HelpMyStreet.Utils.Enums;
@using HelpMyStreet.Utils.Extensions;
@using HelpMyStreet.Utils.Utils;
@using Westwind.AspNetCore.Markdown

@model HelpMyStreetFE.Models.Account.Jobs.JobDetailViewModel

@{
    var jobSummary = Model.JobDetail.Item;
    var requestSummary = Model.JobDetail.Item.RequestSummary;

    var encodedJobID = Base64Utils.Base64Encode(jobSummary.JobID);
}

<div class="job__expander">
    <div class="row">
        <div class="sm12">
            <dl>
                <dt>When is the help needed?</dt>
                @if (requestSummary.Shift.StartDate.ToUKFromUTCTime().Date.Equals(requestSummary.Shift.EndDate.ToUKFromUTCTime().Date))
                {
                    <dd>
                        This shift occurs on
                        <strong>@Html.Raw(requestSummary.Shift.StartDate.FormatDate(DateTimeFormat.LongDateHTMLFormat))</strong> between
                        <strong>
                            @requestSummary.Shift.StartDate.FormatDate(DateTimeFormat.TimeFormat) &ndash;
                            @requestSummary.Shift.EndDate.FormatDate(DateTimeFormat.TimeFormat)
                        </strong>.
                    </dd>
                }
                else
                {
                    <dd>
                        This shift starts on
                        <strong>@Html.Raw(requestSummary.Shift.StartDate.FormatDate(DateTimeFormat.LongDateHTMLFormat))</strong> at
                        <strong>@requestSummary.Shift.StartDate.FormatDate(DateTimeFormat.TimeFormat)</strong> and ends
                        <strong>@Html.Raw(requestSummary.Shift.EndDate.FormatDate(DateTimeFormat.LongDateHTMLFormat))</strong> at
                        <strong>@requestSummary.Shift.EndDate.FormatDate(DateTimeFormat.TimeFormat)</strong>.
                    </dd>
                }
                @if (jobSummary.JobStatus == JobStatuses.Accepted && requestSummary.Shift.StartDate.CompareTo(DateTime.Now) >= 0)
                {
                    <dd>Download calendar event <a href="/account/get-shift-calendar?j=@encodedJobID">here</a>.</dd>
                }
                <div class="location-details">
                    <dt>Where is the shift?</dt>

                    <dd>
                        <div>
                            @Html.DisplayFor(m => m.JobDetail.Location.LocationDetails.Address)
                            <span class="distance">(@Model.JobDetail.Location.Distance.ToString("0.0") miles away)</span>
                        </div>
                        <div class="location-map" id="map-@encodedJobID" style="width:75%; height:150px" data-lat="@Model.JobDetail.Location.LocationDetails.Latitude" data-lng="@Model.JobDetail.Location.LocationDetails.Longitude"></div>
                    </dd>
                </div>

                @if (requestSummary.JobBasics.IncompleteJobs().Count() > 1)
                {
                    var total = requestSummary.JobBasics.IncompleteJobs().Count();
                    var unfilled = requestSummary.JobBasics.UnfilledJobs().Count();
                    var filled = total - unfilled;
                    <dt>How many volunteers are needed?</dt>
                    <dd>
                        This help request requires <strong>@total</strong> volunteers.
                        <strong>@filled</strong> @(filled == 1 ? "place has" : "places have") been filled
                        (<strong>@unfilled</strong> remaining).
                    </dd>
                }
            </dl>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.GroupSupportActivityInstructions.ActivityDetails) || !string.IsNullOrEmpty(jobSummary.RecipientOrganisation))
{
    <div class="job__expander">
        <h4>Request Details<span></span></h4>
        <div class="job__expander__content">
            @if (!string.IsNullOrEmpty(Model.GroupSupportActivityInstructions.ActivityDetails))
            {
                <div class="row">
                    <div class="sm12">
                        @Markdown.ParseHtmlString(Model.GroupSupportActivityInstructions.ActivityDetails)
                    </div>
                </div>
            }
            @if (!string.IsNullOrEmpty(jobSummary.RecipientOrganisation))
            {
                <div class="row">
                    <div class="sm12">
                        @if (!string.IsNullOrEmpty(jobSummary.RecipientOrganisation))
                        {
                            <dl>
                                <dt>Organisation</dt>
                                <dd>@jobSummary.RecipientOrganisation</dd>
                            </dl>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
}

