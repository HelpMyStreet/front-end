@using Westwind.AspNetCore.Markdown
@using HelpMyStreet.Utils.Extensions;
@using HelpMyStreetFE.Models.Account.Jobs

@model JobStatusChangePopupViewModel;


<div class="popup__content wide">
    <partial name="_PopupCloseButton" />
    <div class="popup__content__wrapper">
        <div class="popup__content__header">Start Helping?</div>
        <div class="popup__content__text credentials-required">
            @if (Model.AnnotatedGroupActivityCredentialSets.AnnotatedCredentialSets.Where(s => !s.Any(c => c.UserHasCredential)).Count() == 1)
            {
                <p class="text-left">There's just one more thing you need to do before you can accept this request.</p>
            }
            else
            {
                <p class="text-left">There's just a few more things you need to do before you can accept this request. </p>
            }

            <p class="text-left">To complete this <strong>@Model.ReferringGroup</strong> request for <strong>@Model.JobSummary.SupportActivity.FriendlyNameShort()</strong> you need:</p>

            <div class="credentials-required__list">
                @{ int i = 0; }
                @foreach (var set in Model.AnnotatedGroupActivityCredentialSets.AnnotatedCredentialSets)
                {
                    i++;

                    <div class="credentials-required__set">
                        @if (Model.AnnotatedGroupActivityCredentialSets.AnnotatedCredentialSets.Count() > 1)
                        {
                            <span class="fab circle">
                                @i
                            </span>
                        }
                        @if (set.Any(c => c.UserHasCredential))
                        {
                            <div class="credentials-required__credentials satisfied">
                                @foreach (var cred in set.Where(c => c.UserHasCredential))
                                {
                                    <div class="credentials-required__credential satisfied">
                                        <div class="name">@cred.GroupCredential.Name</div>
                                        <div class="done">
                                            <img src="/img/icons/green-tick.svg" alt="tick" />
                                            <span>Done</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="credentials-required__credentials required">
                                @{ int j = 0; }
                                @foreach (var cred in set)
                                {
                                    j++;
                                    <div class="credentials-required__credential required">
                                        <div class="name">@cred.GroupCredential.Name</div>
                                        @if (!string.IsNullOrEmpty(cred.GroupCredential.HowToAchieve_CTA_Destination))
                                        {
                                            <div class="how text-center">
                                                <a class="btn cta" href="@cred.GroupCredential.HowToAchieve_CTA_Destination">@cred.GroupCredential.HowToAchieve</a>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="how">
                                                @Markdown.ParseHtmlString(cred.GroupCredential.HowToAchieve)
                                            </div>
                                        }
                                    </div>
                                    @if (j < set.Count())
                                    {
                                        <div class="or">or</div>
                                    }
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

