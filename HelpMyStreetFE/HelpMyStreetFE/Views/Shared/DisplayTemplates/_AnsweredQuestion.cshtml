@using HelpMyStreetFE.Models.Account.Jobs;
@using HelpMyStreetFE.Models.RequestHelp;
@using HelpMyStreet.Utils.Extensions;
@using HelpMyStreet.Utils.Utils;
@using HelpMyStreet.Utils.Enums; 
@using HelpMyStreetFE.Helpers;

@model QuestionViewModel;

@{
    var encodedJobID = Base64Utils.Base64Encode(Model.Job.JobID);
    var encodedQuestionID = Base64Utils.Base64Encode(Model.Question.Id);
}

<dt>@Model.Question.FriendlyName()</dt>

@if (Model.IsEditable)
{
    var requestHelpQuestion = new RequestHelpQuestion
    {
        ID = Model.Question.Id,
        InputType = QuestionType.MultiLineText, // Assumption for now
        Model = Model.Question.Answer,
    };

    <dd class="editable-question" data-job-id="@encodedJobID" data-question-id="@encodedQuestionID">
        <div class="answer">
            <div class="answer-content">
                @Html.Raw(Model.Question.Answer.ToHtmlSafeStringWithLineBreaks())
            </div>
            <a href="#" class="edit ml-xs"><img src="~/img/icons/edit.png" alt="Edit" title="Edit" /></a>
        </div>
        <form method="post">
            <div class="input">
                <partial name="_Question" model="requestHelpQuestion" />
            </div>

            <div class="buttons">
                <button class="btn cta--dark-blue-border save-changes" type="submit">
                    <span class="text">Save changes</span>
                    <div class="loader"><partial name="_LoadingSpinner" model='new LoadingSpinnerViewModel { Text = "Saving", ShowDarkSpinner = true }' /></div>
                </button>

                <button class="btn cta--orange-border cancel-editing" type="reset">
                    <span class="text">Cancel editing</span>
                </button>
            </div>
        </form>
    </dd>
}
else
{
    <dd>
        @Html.Raw(Model.Question.Answer.ToHtmlSafeStringWithLineBreaks())
    </dd>
}