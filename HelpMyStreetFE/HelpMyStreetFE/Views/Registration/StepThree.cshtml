@using HelpMyStreetFE.Models.Registration;
@using HelpMyStreet.Utils.Enums

@model RegistrationViewModel

@section Scripts {
    <script>
        const activeStep = @Model.ActiveStep;
        const source = '@Model.RegistrationFormVariant';
    </script>
    <script src="~/registration.js" asp-append-version="true"></script>
}

@{
    ViewData["Title"] = "Volunteers - Registration";
    Layout = "~/Views/Shared/_LayoutNoHeader.cshtml";

    var volunteerOptions = Model.ActivityDetails
        .OrderBy(x => x.DisplayOrder)
        .Select(x => new SupportActivityViewModel() {
            SupportActivities = x.SupportActivity,
            Description = x.Label,
            Selected = x.IsPreSelected });

    if (volunteerOptions.Count() == 0)
    {
        volunteerOptions = new List<SupportActivityViewModel>() {

                new SupportActivityViewModel { SupportActivities = SupportActivities.Shopping, Description = "Picking up groceries and other essentials (e.g. food, toiletries, household products etc.)" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.FaceMask, Description = "Supplying homemade face coverings" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.CollectingPrescriptions, Description = "Collecting prescriptions from a local pharmacy" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.Errands, Description = "Running essential local errands (e.g. posting mail)" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.WellbeingPackage, Description = "Collecting and delivering a pre-prepared wellbeing package" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.DogWalking, Description = "Walking the dog" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.MealPreparation, Description = "Preparing and/or delivering a hot / pre-prepared meal" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.PhoneCalls_Friendly, Description = "Calling someone in need of a friendly chat" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.PhoneCalls_Anxious, Description = "Providing support over the phone to someone who may be anxious (relevant experience required e.g. mental health first-aider)" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.HomeworkSupport, Description = "Providing remote support for parents and carers home-schooling their children" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.CheckingIn, Description = "Reaching out to people in my area to check-in" },
                new SupportActivityViewModel { SupportActivities = SupportActivities.Other, Description = "I may be able to help with other tasks, so please check with me." },
            };
    }

    var distanceOptions = new Dictionary<double, string>
    {
    { 0, "On my street only" },
    { 0.5, "Within 1/2 mile" },
    { 1, "Within 1 mile" },
    { 3, "Within 3 miles" },
    { 0.1, "Other - please tell us the distance in miles" }
    };
        }


    <div class="container">

        <partial name="_Stepper" for="ActiveStep" />

        <div class="row justify-center mt72">
            <div class="sm8">
                <h2>Volunteers</h2>
                @if (Context.Request.Query["failure"] == "error")
        {
                    <p class="orange">There has been an error submitting your details. Please check your entries and try again.</p>
                }
            </div>
        </div>
        <form id="registration_form" method="post">
            <input name="source" type="hidden" value="@Model.RegistrationFormVariant" />
            <div class="row justify-center">
                <div class="sm8">
                    <p>
                        HelpMyStreet will always try to match volunteers to requests that are appropriate for them. We will use the
                        helping preferences you provide on this page to decide which notifications will be most helpful to you. If
                        you sign up for activities that can be done from home (e.g. phone-based support), completed with local services
                        (e.g. posting out homemade face coverings), or require travel to local hubs or facilities, you may see and be
                        notified of requests that come from further afield.
                    </p>
                    <h5>I can help people by:</h5>
                    <p>(Please tick as many as you like)</p>
                    <span class="error" id="volunteer-error">Please select at least one option</span>
                    @foreach (var option in volunteerOptions)
                    {
                        <div class="input input--checkbox">
                            <label for="volunteer-@option.SupportActivities">
                                <input name="volunteer[]" type="checkbox" id="volunteer-@option.SupportActivities" value="@option.SupportActivities" checked="@option.Selected"  hidden />
                                <span class="input--checkbox__checkbox">
                                    <span class="mdi mdi-check"></span>
                                </span>
                                @Html.Raw(@option.Description)
                            </label>
                        </div>
                        <hr class="input--separator" />
                    }
                </div>
                <div class="sm8 mt40">
                    <h5>I can travel to perform tasks that are:</h5>
                    <span class="error" id="distance-error">Please select an option</span>
                    @foreach (var option in distanceOptions)
                    {
                        <div class="input input--radio">
                            <label for="volunteer-distance-@option.Key">
                                <input name="volunteer_distance" type="radio" id="volunteer-distance-@option.Key" value="@option.Key" hidden />
                                <span class="input--radio__radio">
                                    <span class="input--radio__radio__inner"></span>
                                </span>
                                @option.Value
                            </label>
                        </div>
                        <hr class="input--separator" />
                    }
                </div>

                <div class="sm8 ">
                    <div class="input input--radio mt-md ">
                        <input name="custom_distance" step=".01" class="dnone" type="number" placeholder="e.g. 10" />
                        <span class="error" id="custom_distance-error">Please enter a number of miles (up to a maximum of 20)</span>
                    </div>
                </div>
                
                <div class="sm8">
                    <div class="controls">
                        <button class="btn large cta fill" id="submit_button" type="submit">
                            <span class="text">Complete registration &gt;</span>
                            <div class="loader"><partial name="_LoadingSpinner" model='new LoadingSpinnerViewModel { Text = "Completing..."}' /></div>
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
